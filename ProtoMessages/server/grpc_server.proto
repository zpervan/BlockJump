syntax = "proto3";

option go_package = "./proto";

import "ProtoMessages/server/stream.proto";

service BlockJump {
    rpc TestConnection (DummyRequest) returns (DummyResponse) {}
    rpc ConnectToServer (ConnectRequest) returns (ConnectResponse) {}
    rpc ConnectToGame (DummyRequest) returns (DummyResponse) {}
    rpc ListAllGames (EmptyRequest) returns (ListOfGames) {}
    rpc Stream (stream StreamRequest) returns (stream StreamResponse) {}
}

enum ErrorCode {
    ERROR_CODE_OK = 0;
    ERROR_CODE_NOT_FOUND = 1;
    ERROR_CODE_INTERNAL_ERROR = 2;
    ERROR_CODE_FATAL = 3;
}

message Error {
    ErrorCode code = 1;
    string message = 2;
}

message EmptyRequest {}

message DummyRequest {
    string dummy_data = 1;
}

message DummyResponse {
    string dummy_data = 1;
}

message ConnectRequest {
    string id = 1;
    string username = 2;
    string password = 3;
}

message ConnectResponse {
    string token = 1;
    Error error = 2;
    string server_name = 3;
    // @TODO: Define how the initial game state should be represented (i.e. entity pose, current map name, etc.)
    // repeated Entity entities = 2;
}

message ListOfGames {
    repeated Game available_games = 1;
    Error error = 2;
}

message Game {
    string name = 1;
    int32 player_count = 2;
}