load("@rules_cc//cc:defs.bzl", "cc_binary")

# Game rules

cc_binary(
    name = "main",
    srcs = ["Game/main.cpp"],
    data = ["//Assets:copy_fonts"],
    deps = [
        "//:game",
        "@curlcpplib//:curlcpp",
        "@spdloglib//:spdlog",
    ],
)

cc_library(
    name = "game",
    srcs = ["Game/game.cpp"],
    hdrs = ["Game/game.h"],
    data = [
        "//Assets:copy_sprites",
        "//Assets:copy_sounds",
        "//Assets:sprites",
        "//Assets:sounds"
    ],
    linkopts = select({
        "@platforms//os:windows": ["-DEFAULTLIB:user32.lib"],
        "@platforms//os:linux": [
            "-pthread",
            "-lX11",
        ],
    }),
    visibility = ["//visibility:public"],
    deps = [
        "//Game/Entities:entities",
        "//Game/GUI:gui",
        "//Game/World:world",
        "@spdloglib//:spdlog",
    ],
)

cc_library(
    name = "game-bootstrap",
    srcs = ["Game/constants.h"],
    visibility = ["//visibility:public"],
)

# Map editor rules

cc_binary(
    name = "map-editor",
    srcs = ["MapEditor/main.cpp"],
    data = ["//Assets:copy_sprites"],
    deps = [
        "//MapEditor/Core:core",
        "//MapEditor/GUI:gui",
        "//MapEditor/Map:map",
        "@imguilib//:imgui",
        "@spdloglib//:spdlog",
    ],
)
